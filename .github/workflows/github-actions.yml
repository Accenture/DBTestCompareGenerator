on:
  push:
    branches:
    - '*'
    paths-ignore:
    - README.md
    tags:
    - '*'
  schedule:
  - cron: '0 18 * * 0'
env:
  solution: './DBTestCompareGenerator.sln'
  buildPlatform: Any CPU
  buildConfiguration: Release
  dBTestCompareGeneratorVersion: 0.1.0
  SQL_SERVER: localhost
  SQL_SERVERINSTANCE: SQLEXPRESS
  SQL_SERVERDBNAME: AdventureWorks2008R2
  SQL_SERVER_USERNAME: sa
  SQL_SERVER_PASSWORD: yourStrong22Password
jobs:
  BuildOnLinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - shell: pwsh
      run: |
        $tags = git tag --sort=-creatordate   
        $tag = $tags[0]
        Write-Host "##vso[task.setvariable variable=dBTestCompareGeneratorVersion]$tag"
      if: startsWith(github.ref, 'refs/tags/')
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - run: dotnet build --configuration ${{ env.buildConfiguration }} /p:Version=${{ env.dBTestCompareGeneratorVersion }}
    - run: docker-compose -f "./DBTestCompareGenerator/docker-compose.yml" up -d
    - name: download backup and jdbc driverss
      shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        ./download-backup-and-jdbc-drivers.ps1
    - name: download latest release
      shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        echo ${{ github.run_number }}
        ./download-latest-release.ps1
    - name: restore backup
      shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        rm -rfv test-definitions
        rm -rfv README.md
        rm -rfv LICENSE-3RD-PARTY
        rm -rfv LICENSE
        ./restore-backup.ps1
    - name: set chmod run DBTestCompareGeneratorr 
      shell: bash
      run: |
        cd ./DBTestCompareGenerator/bin/${{ env.buildConfiguration }}/net6.0/
        mv ./"DBTestCompare-"*"-SNAPSHOT-jar-with-dependencies.jar" ./
        chmod 777 ./DBTestCompareGenerator
        chmod 777 "DBTestCompare-"*"-SNAPSHOT-jar-with-dependencies.jar"
        ls -alR
        ./DBTestCompareGenerator
    - name: run DBTestCompare
      shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        .\set-tokens-for-tests.ps1 -OutDir ".\test-definitions\" -FileType "cmpSqlResults-config.xml" -token "\$\{SQL_SERVER\}|\$\{SQL_SERVERDBNAME\}|\$\{SQL_SERVER_USERNAME\}|\$\{SQL_SERVER_PASSWORD\}" -Value "${{ env.SQL_SERVER }}|${{ env.SQL_SERVERDBNAME }}|${{ env.SQL_SERVER_USERNAME }}|${{ env.SQL_SERVER_PASSWORD }}"
        $DBTestCompare = (Resolve-Path ".\DBTestCompare-*-SNAPSHOT-jar-with-dependencies.jar").ToString()
        /usr/bin/java -jar $DBTestCompare
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/TEST-*.xml'
    - name: run DBTestCompare
      shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        ./set-appsettings.ps1 "./" "appsettings.json" "appSettings" "ReadExcelFile|DacpacFolder|Folder|UnpackDacpac" "true|${{ github.workspace }}/Dacpac|${{ github.workspace }}/Current|true" $true
        ./DBTestCompareGenerator
        .\set-tokens-for-tests.ps1 -OutDir ".\test-definitions\" -FileType "cmpSqlResults-config.xml" -token "\$\{SQL_SERVER\}|\$\{SQL_SERVERDBNAME\}|\$\{SQL_SERVER_USERNAME\}|\$\{SQL_SERVER_PASSWORD\}" -Value "${{ env.SQL_SERVER }}|${{ env.SQL_SERVERDBNAME }}|${{ env.SQL_SERVER_USERNAME }}|${{ env.SQL_SERVER_PASSWORD }}"
        $DBTestCompare = (Resolve-Path ".\DBTestCompare-*-SNAPSHOT-jar-with-dependencies.jar").ToString()
        /usr/bin/java -jar $DBTestCompare
        cd ../../../../
        compress-archive -path "DBTestCompareGenerator" testt.zip
    - name: Zip generated objects definition
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -r ./DBTestCompareGenerator/${{ github.run_id }}.zip ./DBTestCompareGenerator
    - name: Publish sql files
      uses: actions/upload-artifact@v2
      with:
        path: testt.zip
        name: definitions2
    - name: Publish sql files
      uses: actions/upload-artifact@v2
      with:
        path: ./DBTestCompareGenerator/${{ github.run_id }}.zip
        name: definitionstest
    - name: Publish dacpack files
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}\Dacpac/${{ env.SQL_SERVERDBNAME }}.dacpac
        name: ${{ env.SQL_SERVERDBNAME }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/TEST-*.xml'
    - shell: pwsh
      run: |
        cd .\DBTestCompareGenerator\bin\${{ env.buildConfiguration }}\net6.0
        rm -rfv test-definitions zip deploy jdbc_drivers target test-output
        rm -f *.bak *.jar *.log
    - uses: actions/upload-artifact@v2
      with:
        path: ./DBTestCompareGenerator/bin/${{ env.buildConfiguration }}/net6.0
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}  
      if: (success() && startsWith(github.ref, 'refs/tags/'))
  BuildOnWindows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - shell: powershell
      run: |
        $tags = git tag --sort=-creatordate   
        $tag = $tags[0]
        Write-Host "##vso[task.setvariable variable=dBTestCompareGeneratorVersion]$tag"
      if: startsWith(github.ref, 'refs/tags/')
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - run: dotnet build --configuration ${{ env.buildConfiguration }} /p:Version=${{ env.dBTestCompareGeneratorVersion }}
    - uses: actions/upload-artifact@v2
      with:
        name: DBTestCompareGeneratorWindows${{ env.dBTestCompareGeneratorVersion }}
        path: ./DBTestCompareGenerator/bin/${{ env.buildConfiguration }}/net6.0
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ./release/DBTestCompare$(dBTestCompareVersion).zip
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}  
      if: (success() && startsWith(github.ref, 'refs/tags/'))